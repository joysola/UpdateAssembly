<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:DST.Controls"
                    xmlns:converter="clr-namespace:DST.Converters"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Share.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converter:TrueToFalseConverter x:Key="TrueToFalseConverter" />

    <!--  下拉条目样式  -->
    <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid Margin="0" Background="White">
                        <Border x:Name="ItemBackground"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                IsHitTestVisible="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter.Resources>
                                <!--  开放用户自定义字体大小，不受全局样式的影响  -->
                                <Style TargetType="{x:Type TextBlock}" />
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ItemBackground" Property="Background" Value="{StaticResource ItemMouseOverBackground}" />
                            <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="#159CA4" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="ItemBackground" Property="Background" Value="{StaticResource ItemMouseOverBackground}" />
                            <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="#159CA4" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ItemBackground" Property="Background" Value="{StaticResource ItemMouseOverBackground}" />
                            <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="#159CA4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  水印：local:ControlAttachProperty.Watermark  -->
    <!--  Label区域：local:ControlAttachProperty.LabelTemplate ，local:ControlAttachProperty.Label  -->
    <!--  附加内容区域：local:ControlAttachProperty.AttachContent  -->
    <!--  圆角：local:ControlAttachProperty.CornerRadius  -->
    <!--  local:ControlAttachProperty.MouseOverBorderBrush  -->
    <!--  local:ControlAttachProperty.FocusBorderBrush  -->
    <!--  local:ControlAttachProperty.FocusBackground  -->
    <Style x:Key="NormalComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="350" />
        <Setter Property="Margin" Value="10,0,0,0" />
        <Setter Property="Foreground" Value="{StaticResource TextForeground}" />
        <Setter Property="Background" Value="{StaticResource TextBackground}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="local:ControlAttachProperty.FocusBackground" Value="{StaticResource FocusBackground}" />
        <Setter Property="local:ControlAttachProperty.FocusBorderBrush" Value="{StaticResource FocusBorderBrush}" />
        <Setter Property="local:ControlAttachProperty.MouseOverBorderBrush" Value="{StaticResource MouseOverBorderBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily_Ctl}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize_Ctl}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MaxDropDownHeight" Value="400" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="PART_Root">
                        <Border x:Name="Bg" Background="#EBF4F7"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding local:ControlAttachProperty.CornerRadius}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="21" />
                            </Grid.ColumnDefinitions>
                            <!--  Label区域  -->
                            <ContentControl x:Name="Label" Margin="1,1,0,1"
                                            Content="{TemplateBinding local:ControlAttachProperty.Label}"
                                            Focusable="False" IsHitTestVisible="False" IsTabStop="False"
                                            Template="{TemplateBinding local:ControlAttachProperty.LabelTemplate}" />
                            <!--  附加内容区域  -->
                            <Border x:Name="PART_AttachContent" Grid.Column="2" HorizontalAlignment="Center"
                                    VerticalAlignment="Center" Panel.ZIndex="2">
                                <ContentControl VerticalAlignment="Center" VerticalContentAlignment="Center" Focusable="False"
                                                IsTabStop="False"
                                                Template="{TemplateBinding local:ControlAttachProperty.AttachContent}" />
                            </Border>
                            <!--  下拉按钮  -->
                            <ToggleButton x:Name="PART_DropDownToggle" Grid.Column="1" Grid.ColumnSpan="3"
                                          Margin="2,1,2,1" Background="#EBF4F7" Focusable="False"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          IsEnabled="{Binding Path=IsReadOnly, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TrueToFalseConverter}, Mode=OneWay}"
                                          IsTabStop="False"
                                          Style="{StaticResource ComboToggleButton}" />
                            <!--  水印  -->
                            <Border Grid.Column="1">
                                <TextBlock x:Name="Message" Margin="5,2,5,2" Padding="0" HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           Foreground="{TemplateBinding Foreground}"
                                           IsHitTestVisible="False"
                                           Opacity="{StaticResource WatermarkOpacity}"
                                           Text="{TemplateBinding local:ControlAttachProperty.Watermark}"
                                           TextAlignment="Center" Visibility="Collapsed" />
                            </Border>
                            <!--  主内容区域  -->
                            <Grid x:Name="ContentSite" Grid.Column="1" Margin="2,0,0,0">
                                <ContentPresenter x:Name="PART_SelectedItem" Margin="2,0,2,0" HorizontalAlignment="Stretch"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  IsHitTestVisible="False"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  TextBlock.FontSize="{TemplateBinding FontSize}">
                                    <ContentPresenter.Resources>
                                        <!--  开放用户自定义字体大小，不受全局样式的影响  -->
                                        <Style TargetType="{x:Type TextBlock}" />
                                    </ContentPresenter.Resources>
                                </ContentPresenter>

                                <!--  文本编辑  -->
                                <TextBox x:Name="PART_EditableTextBox" HorizontalAlignment="Stretch"
                                         VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         FontFamily="{TemplateBinding FontFamily}"
                                         FontSize="{TemplateBinding FontSize}"
                                         Foreground="{TemplateBinding Foreground}"
                                         IsHitTestVisible="True"
                                         IsReadOnly="{TemplateBinding IsReadOnly}"
                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                         Style="{StaticResource EditableTextBoxStyle}"
                                         Text="{TemplateBinding Text}"
                                         Visibility="Collapsed" />
                            </Grid>
                        </Grid>
                        <!--  弹出下拉控件  -->
                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               Placement="Bottom"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <Grid Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">
                                <Border x:Name="PopupBorder" Height="Auto" HorizontalAlignment="Stretch"
                                        Background="{StaticResource PopupBackground}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}" />
                                <ScrollViewer x:Name="DropDownScrollViewer" Margin="1" BorderThickness="0">
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <!--  触发器  -->
                    <ControlTemplate.Triggers>
                        <!--  1.显示水印  -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                            <Setter TargetName="Message" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <!--  编辑模式  -->
                        <Trigger Property="IsEditable" Value="True">
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_SelectedItem" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_DropDownToggle" Property="Grid.Column" Value="3" />
                            <Setter TargetName="PART_DropDownToggle" Property="Grid.ColumnSpan" Value="1" />
                            <Setter TargetName="PART_DropDownToggle" Property="Background" Value="Transparent" />
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_DropDownToggle" Property="Focusable" Value="False" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_DropDownToggle" Property="Background" Value="#BDF0EE" />
                            <Setter TargetName="Bg" Property="Background" Value="#BDF0EE" />
                            <Setter Property="BorderBrush" Value="{Binding Path=(local:ControlAttachProperty.MouseOverBorderBrush), RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="PART_DropDownToggle" Property="Background" Value="#BDF0EE" />
                            <Setter TargetName="Bg" Property="Background" Value="#BDF0EE" />
                            <Setter Property="BorderBrush" Value="{Binding Path=(local:ControlAttachProperty.MouseOverBorderBrush), RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Root" Property="Opacity" Value="{StaticResource DisableOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--默认配置-joysola-->
    <Style BasedOn="{StaticResource NormalComboBoxStyle}" TargetType="ComboBox" />

    <Style BasedOn="{StaticResource NormalComboBoxStyle}" TargetType="{x:Type local:ComboBoxEx}" />

    <!--下拉按钮-->
    <Style TargetType="ToggleButton" x:Key="ComboxStyleBtn">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="Back" Background="#F7FDF7" BorderThickness="1" BorderBrush="Transparent">
                        <Path Name="PathFill" Fill="#FF4994BA" Width="8" Height="6" StrokeThickness="0" Data="M5,0 L10,10 L0,10 z" RenderTransformOrigin="0.5,0.5" Stretch="Fill">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="180" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PathFill" Property="Fill" Value="White"></Setter>
                            <Setter TargetName="Back" Property="Background" Value="#FF4994BA"></Setter>
                            <Setter TargetName="Back" Property="BorderBrush" Value="#59CA4F"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Combox-->
    <Style TargetType="ComboBox" x:Key="ComboBoxStyle">
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <!--ComBoxItem-->
                <Style TargetType="ComboBoxItem">
                    <Setter Property="MinHeight" Value="30"></Setter>
                    <Setter Property="MinWidth" Value="60"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border Name="Back"  BorderThickness="0,0,0,0" Background="Transparent" BorderBrush="#FF4994BA">
                                    <ContentPresenter ContentSource="{Binding Source}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0"></ContentPresenter>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="Back" Property="Background" Value="#FF4994BA"></Setter>
                                    </Trigger>
                                    <Trigger Property="IsHighlighted" Value="True">
                                        <Setter TargetName="Back" Property="Background" Value="#FF4994BA"></Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid Background="#F7FDF7">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.7*" />
                            <ColumnDefinition Width="0.3*" MaxWidth="30" />
                        </Grid.ColumnDefinitions>
                        <TextBox VerticalContentAlignment="Center" Grid.Column="0" IsReadOnly="{TemplateBinding IsReadOnly}" Text="{TemplateBinding Text}"></TextBox>
                        <Border  Grid.Column="0" BorderThickness="1,1,0,1" BorderBrush="#FF4994BA" CornerRadius="1,0,0,1" />
                        <Border Grid.Column="1" BorderThickness="0,1,1,1" BorderBrush="#FF4994BA" CornerRadius="0,1,1,0">
                            <ToggleButton Style="{StaticResource ComboxStyleBtn}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"></ToggleButton>
                        </Border>
                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                            <Border CornerRadius="1" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                <Border.Effect>
                                    <DropShadowEffect Color="Black" BlurRadius="2" ShadowDepth="0" Opacity="0.5" />
                                </Border.Effect>
                                <ScrollViewer Margin="0" Style="{DynamicResource ScrollViewerStyle}" MaxHeight="{TemplateBinding MaxDropDownHeight}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                    <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="#FFD3E7F1" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxWithFocusOpen"
           BasedOn="{StaticResource NormalComboBoxStyle}"
           TargetType="ComboBox">
        <Style.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="IsDropDownOpen" Value="True" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ComboBoxWithUnderLine" TargetType="ComboBox">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="10,0,0,0" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" Grid.ColumnSpan="2" Margin="1" AllowsTransparency="true"
                               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                               Placement="Bottom"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <Border x:Name="dropDownBorder"
                                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                    BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                    BorderThickness="1">
                                <ScrollViewer x:Name="DropDownScrollViewer">
                                    <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas x:Name="canvas" Width="0" Height="0" HorizontalAlignment="Left"
                                                VerticalAlignment="Top">
                                            <Rectangle x:Name="opaqueRect"
                                                       Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                       Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                       Fill="{Binding Background, ElementName=dropDownBorder}" />
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                        <ToggleButton x:Name="toggleButton" Grid.ColumnSpan="2"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{x:Null}"
                                      BorderThickness="0" ClickMode="Press" Focusable="False"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Grid>
                                        <Image Width="15" Height="15" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                                               Source="/DST.Controls;component/Images/pulldown_icon.png" />
                                        <Border x:Name="border" Height="1" VerticalAlignment="Bottom" BorderBrush="White"
                                                BorderThickness="1" />
                                    </Grid>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource DisableUnderLineBrush}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          IsHitTestVisible="false"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          TextBlock.Foreground="White" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                        <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                            <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                            <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Padding" Value="3" />
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate_Ctl}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="ComboBoxEditableTemplate_Ctl" TargetType="{x:Type ComboBox}">
        <Grid x:Name="Placement" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" Grid.ColumnSpan="2" AllowsTransparency="true"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Themes:SystemDropShadowChrome x:Name="Shdw"
                                               MinWidth="{Binding ActualWidth, ElementName=Placement}"
                                               MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                               Color="Transparent">
                    <Border x:Name="DropDownBorder"
                            Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                            BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                            BorderThickness="1">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas Width="0" Height="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <Rectangle x:Name="OpaqueRect"
                                               Width="{Binding ActualWidth, ElementName=DropDownBorder}"
                                               Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                               Fill="Transparent" />
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Themes:SystemDropShadowChrome>
            </Popup>
            <Themes:ListBoxChrome x:Name="Border" Grid.ColumnSpan="2" Background="Transparent"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="0"
                                  RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"
                                  RenderMouseOver="{TemplateBinding IsMouseOver}" />
            <TextBox x:Name="PART_EditableTextBox" Margin="10,0,0,0"
                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                     FontSize="16"
                     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                     Style="{StaticResource ComboBoxEditableTextBox}" />
            <Border x:Name="border" Grid.ColumnSpan="2" Height="1" VerticalAlignment="Bottom"
                    BorderBrush="{StaticResource EnableUnderLineBrush}"
                    BorderThickness="1" />
            <ToggleButton x:Name="toggleButton" Grid.Column="1"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{x:Null}"
                          BorderThickness="0" ClickMode="Press" Focusable="False"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                <ToggleButton.Template>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid Background="#01FFFFFF">
                            <Image Width="15" Height="15" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                                   Source="/DST;component/Images/pulldown_icon.png" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </ToggleButton.Template>
            </ToggleButton>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
            <Trigger Property="IsDropDownOpen" Value="true">
                <Setter TargetName="Border" Property="RenderFocused" Value="true" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                <Setter Property="Background" Value="#FFF4F4F4" />
                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource DisableUnderLineBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                <Setter TargetName="Shdw" Property="Color" Value="#71000000" />
            </Trigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <LinearGradientBrush x:Key="TextBoxBorder" MappingMode="Absolute" StartPoint="0,0" EndPoint="0,20">
        <GradientStop Offset="0.05" Color="#ABADB3" />
        <GradientStop Offset="0.07" Color="#E2E3EA" />
        <GradientStop Offset="1" Color="#E3E9EF" />
    </LinearGradientBrush>
</ResourceDictionary>